{"version":3,"sources":["styles/spaces.ts","app/styles.ts","styles/colors.ts","components/footer/styles.ts","config/enums.ts","components/footer/index.tsx","components/header/styles.ts","components/button/language/styles.ts","components/button/language/index.tsx","components/button/mode/index.tsx","components/header/index.tsx","pages/about/index.tsx","pages/contact/index.tsx","pages/home/styles.ts","components/quote/styles.ts","components/quote/index.tsx","images/logo.svg","pages/home/index.tsx","styles/GlobalStyles.ts","app/index.tsx","index.tsx"],"names":["SPACES","headerHeight","Section","styled","section","attrs","className","spaces","COLORS","primaryColor","primaryTextColor","darkerGray","shadowTextColor","secondaryBackgroundColor","primaryBackgroundColor","secondaryTextColor","Footer","footer","colors","LANGUAGES_HTML_CODES","PT","EN","LANGUAGES_LABELS","SECTIONS_LABELS","home","about","contact","SOCIAL_MEDIAS_LINKS","github","linkedin","twitter","CURRENT_YEAR","Date","getFullYear","addSocialMedias","socialMedias","Object","entries","E","forEach","id","link","push","href","target","rel","Header","header","Button","button","Ul","ul","addLanguages","changeLanguage","languages","label","onClick","ButtonLanguage","properties","language","ButtonMode","changeMode","addSections","changeSection","sections","type","aria-expanded","data-toggle","data-target","aria-controls","aria-label","role","body","About","Contact","Img","img","palette","div","Div","preposition","directedBy","Quote","line","character","title","director","company","year","greeting","months","addVersion","today","day","getDate","month","getMonth","addColorPalette","colorsForPalette","values","color","style","backgroundColor","width","Home","Fragment","src","Logo","alt","toLocaleLowerCase","createGlobalStyle","getSection","App","useState","activeSection","setActiveSection","setLanguage","mode","setMode","setSection","selectedSection","document","querySelector","classList","remove","add","useEffect","documentElement","setAttribute","newMode","event","preventDefault","currentTarget","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1037812d.chunk.js","sourcesContent":["const SPACES = {\n  headerHeight: '58px',\n};\nexport default SPACES;\n","import styled from 'styled-components';\n\nimport spaces from '../styles/spaces';\n\nexport const Section = styled.section.attrs({\n  className: 'container my-4',\n})`\n  padding-top: ${spaces.headerHeight};\n`;\n","const COLORS = {\n  primaryColor: '#28a745', // green\n  primaryTextColor: 'rgb(0, 0, 0)', // black\n  darkerGray: 'rgb(30, 30, 30)', // dark-gray\n  shadowTextColor: 'rgb(80, 80, 80)', // medium-dark-gray\n  secondaryBackgroundColor: 'rgb(160, 160, 160)', // medium-light-gray\n  primaryBackgroundColor: 'rgb(220, 220, 220)', // light-gray\n  secondaryTextColor: 'rgb(255, 255, 255)', // white\n};\nexport default COLORS;\n","import styled from 'styled-components';\n\nimport colors from '../../styles/colors';\n\nexport const Footer = styled.footer.attrs({\n  className: 'px-3',\n})`\n  align-items: center;\n  background-color: ${colors.primaryColor};\n  color: ${colors.secondaryTextColor};\n  display: flex;\n  justify-content: center;\n  min-height: 58px;\n\n  a:link,\n  a:visited {\n    color: ${colors.secondaryTextColor};\n  }\n\n  span {\n    font-size: 30px;\n  }\n`;\n","import * as T from './types';\n\nexport const LANGUAGES_HTML_CODES: T.languagesMap = {\n  PT: 'pt-BR',\n  EN: 'en',\n};\n\nexport const LANGUAGES_LABELS: T.languagesMap = {\n  PT: '\\u{1F1E7}\\u{1F1F7} Português do Brasil',\n  EN: '\\u{1F1FA}\\u{1F1F8} English',\n};\n\nexport const SECTIONS_LABELS: T.sectionsLabels = {\n  home: {\n    PT: 'Início',\n    EN: 'Home',\n  },\n  about: {\n    PT: 'Sobre',\n    EN: 'About',\n  },\n  contact: {\n    PT: 'Contato',\n    EN: 'Contact',\n  },\n};\n\nexport const SOCIAL_MEDIAS_LINKS: T.socialMedias = {\n  github: 'https://github.com/mateusoliveira43',\n  linkedin: 'https://www.linkedin.com/in/mateusoliveira43/',\n  twitter: 'https://twitter.com/mateusolivei43',\n  // youtube: 'https://www.youtube.com/channel/UCAXCKVHXg5weD2zqFJ056QQ',\n};\n","import React from 'react';\n\nimport * as S from './styles';\nimport * as E from '../../config/enums';\n\nconst CURRENT_YEAR = new Date().getFullYear();\n\nfunction addSocialMedias(): JSX.Element[] {\n  const socialMedias: JSX.Element[] = [];\n  Object.entries(E.SOCIAL_MEDIAS_LINKS).forEach(([id, link]) => {\n    socialMedias.push(\n      <a key={id} href={link} target=\"_blank\" rel=\"noreferrer\" className=\"ml-2\">\n        <span className={`fab fa-${id}`} />\n      </a>,\n    );\n  });\n  return socialMedias;\n}\n\nexport default function Footer(): JSX.Element {\n  return (\n    <S.Footer>\n      &copy; 2020-{CURRENT_YEAR} Mateus Oliveira\n      {addSocialMedias()}\n    </S.Footer>\n  );\n}\n","import styled from 'styled-components';\n\nimport colors from '../../styles/colors';\nimport spaces from '../../styles/spaces';\n\nexport const Header = styled.header.attrs({\n  className: 'fixed-top',\n})`\n  background-color: ${colors.primaryColor};\n  min-height: ${spaces.headerHeight};\n`;\n","import styled from 'styled-components';\n\nimport colors from '../../../styles/colors';\n\nexport const Button = styled.button.attrs({\n  className: 'dropdown-toggle navbar-brand btn btn-outline-light',\n  'data-toggle': 'dropdown',\n  'aria-haspopup': 'true',\n  'aria-expanded': 'false',\n})`\n  margin-right: 0;\n`;\n\nexport const Ul = styled.ul.attrs({\n  className: 'dropdown-menu dropdown-menu-right',\n})`\n  background-clip: unset;\n  background-color: ${colors.primaryColor};\n\n  .active {\n    background-color: unset;\n    color: ${colors.secondaryTextColor};\n  }\n\n  a:link,\n  a:visited,\n  a:hover {\n    color: unset;\n    text-decoration: unset;\n  }\n\n  li {\n    color: ${colors.shadowTextColor};\n    cursor: pointer;\n    padding: 0.25rem 0.5rem;\n\n    :hover,\n    :active {\n      background-color: unset;\n      color: ${colors.secondaryTextColor};\n    }\n  }\n`;\n","import React from 'react';\n\nimport * as S from './styles';\nimport * as E from '../../../config/enums';\nimport * as T from '../../../config/types';\n\n/**\n * Adds the website's languages options to Bootstrap's dropdown.\n * @param changeLanguage Function to handle the website's change of language.\n * @returns List of li elements with the website's languages labels.\n */\nfunction addLanguages(\n  changeLanguage: React.MouseEventHandler<HTMLLIElement>,\n): JSX.Element[] {\n  const languages: JSX.Element[] = [];\n  Object.entries(E.LANGUAGES_LABELS).forEach(([id, label]) => {\n    languages.push(\n      <li onClick={changeLanguage} className=\"dropdown-item\" id={id} key={id}>\n        <a href=\"#\">{label}</a>\n      </li>,\n    );\n  });\n  return languages;\n}\n\n/**\n * Website's language handler button component.\n * @param properties Button's properties.\n * @returns Button element to handle, and show, website's languages.\n */\nexport default function ButtonLanguage(\n  properties: T.buttonLanguageProperties,\n): JSX.Element {\n  return (\n    <div className=\"dropdown btn-group\">\n      <S.Button>\n        {/* TODO use font where letters have the same size (when language is changed, the button \"moves\") */}\n        <span className=\"fas fa-globe-americas\" /> {properties.language}\n      </S.Button>\n      <S.Ul>{addLanguages(properties.changeLanguage)}</S.Ul>\n    </div>\n  );\n}\n","import React from 'react';\n\nimport * as T from '../../../config/types';\n\nexport default function ButtonMode(\n  properties: T.buttonModeProperties,\n): JSX.Element {\n  return (\n    <button\n      onClick={properties.changeMode}\n      className=\"navbar-brand btn btn-outline-light\">\n      <span className=\"fas fa-adjust\" />\n    </button>\n  );\n}\n","import React from 'react';\n\nimport * as S from './styles';\nimport ButtonLanguage from '../button/language';\nimport ButtonMode from '../button/mode';\nimport * as E from '../../config/enums';\nimport * as T from '../../config/types';\n\n/**\n * Adds the website's sections options to Bootstrap's navbar.\n * @param changeSection Function to handle the website's change of section.\n * @param language Current language.\n * @returns List of li elements with the website's sections labels.\n */\nfunction addSections(\n  changeSection: T.changeSection,\n  language: T.languagesCode,\n): JSX.Element[] {\n  const sections: JSX.Element[] = [];\n  Object.entries(E.SECTIONS_LABELS).forEach(([id, label]) => {\n    sections.push(\n      <li className=\"nav-item\" id={id} key={id}>\n        <a\n          href=\"#\"\n          className=\"nav-link ml-0\"\n          onClick={() => changeSection(id as T.sections)}>\n          {label[language]}\n        </a>\n      </li>,\n    );\n  });\n  return sections;\n}\n\n/**\n * Website's header component, with nav and buttons.\n * @param properties Sections and Buttons properties.\n * @returns Header element.\n */\nexport default function Header(properties: T.headerProperties): JSX.Element {\n  return (\n    <S.Header>\n      <nav className=\"navbar navbar-expand-md navbar-dark\">\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          aria-expanded=\"false\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\"\n          aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <span className=\"order-md-last\">\n          <ButtonMode changeMode={properties.changeMode} />\n          <ButtonLanguage\n            changeLanguage={properties.changeLanguage}\n            language={properties.language}\n          />\n        </span>\n        <div\n          role=\"navigation\"\n          className=\"collapse navbar-collapse\"\n          id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav mr-auto\">\n            {addSections(properties.changeSection, properties.language)}\n          </ul>\n        </div>\n      </nav>\n    </S.Header>\n  );\n}\n","import React from 'react';\n\nimport * as T from '../../config/types';\n\nconst body: T.languagesMap = {\n  PT: 'TRABALHO EM ANDAMENTO',\n  EN: 'WORK IN PROGRESS',\n};\n\nexport default function About(properties: T.currentLanguage): JSX.Element {\n  return (\n    <h1 className=\"d-flex justify-content-center\">\n      {body[properties.language]}\n    </h1>\n  );\n}\n","import React from 'react';\n\nimport * as T from '../../config/types';\n\nconst body: T.languagesMap = {\n  PT: 'TRABALHO EM ANDAMENTO',\n  EN: 'WORK IN PROGRESS',\n};\n\nexport default function Contact(properties: T.currentLanguage): JSX.Element {\n  return (\n    <h1 className=\"d-flex justify-content-center\">\n      {body[properties.language]}\n    </h1>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Img = styled.img`\n  min-width: 100px;\n  width: 70%;\n`;\n\nexport const palette = styled.div.attrs({\n  className: 'my-2',\n})`\n  display: flex;\n  height: 30px;\n  justify-content: space-between;\n`;\n","import styled from 'styled-components';\n\nexport const Div = styled.div.attrs({\n  className: 'quote p-3',\n})`\n  border-radius: 10px;\n  margin: 20px auto;\n  overflow: hidden;\n  width: fit-content;\n`;\n","import React from 'react';\n\nimport * as S from './styles';\nimport * as T from '../../config/types';\n\nconst preposition: T.languagesMap = {\n  PT: 'em ',\n  EN: 'in ',\n};\n\nconst directedBy: T.languagesMap = {\n  PT: 'Direção de ',\n  EN: 'Directed by ',\n};\n\n// TODO find a reference on how to quote character lines and add it here\nexport default function Quote(properties: T.movieQuoteProperties): JSX.Element {\n  return (\n    <S.Div>\n      <q>{properties.line}</q>\n      <p className=\"pt-2\">\n        {properties.character} {preposition[properties.language]}\n        <cite>{properties.title}</cite>. {directedBy[properties.language]}\n        {properties.director}. {properties.company}, {properties.year}.\n      </p>\n    </S.Div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/logo.bf23ab11.svg\";","import React from 'react';\n\nimport * as S from './styles';\nimport * as T from '../../config/types';\nimport colors from '../../styles/colors';\nimport Quote from '../../components/quote';\nimport Logo from '../../images/logo.svg';\n\nconst greeting: T.languagesMap = {\n  PT: 'Bem-vindo(a)!',\n  EN: 'Welcome!',\n};\n\nconst body: T.languagesMap = {\n  PT: 'TRABALHO EM ANDAMENTO',\n  EN: 'WORK IN PROGRESS',\n};\n\nconst months: T.months = {\n  PT: [\n    'janeiro',\n    'fevereiro',\n    'março',\n    'abril',\n    'maio',\n    'junho',\n    'julho',\n    'agosto',\n    'setembro',\n    'outubro',\n    'novembro',\n    'dezembro',\n  ],\n  EN: [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ],\n};\n\n// TODO Read version from package.json\nfunction addVersion(language: T.languagesCode): JSX.Element {\n  const today = new Date();\n  const day = today.getDate();\n  const month = today.getMonth();\n  const year = today.getFullYear();\n  return (\n    <h5>\n      <b>{language === 'PT' ? 'Versão' : 'Version'} 3.0.0:</b>{' '}\n      {language === 'PT'\n        ? `atualizado em ${day} de ${months[language][month]} de ${year}.`\n        : `updated in ${months[language][month]} ${day}, ${year}.`}\n    </h5>\n  );\n}\n\nfunction addColorPalette(): JSX.Element[] {\n  const colorsForPalette: JSX.Element[] = [];\n  Object.values(colors).forEach((color) => {\n    colorsForPalette.push(\n      <div key={color} style={{ backgroundColor: color, width: '100%' }} />,\n    );\n  });\n  return colorsForPalette;\n}\n\nfunction addWebsiteInfo(language: T.languagesCode): JSX.Element {\n  return (\n    <p>\n      {language === 'PT' ? 'Este site é um site do ' : 'This is a '}\n      <a\n        href={`https://docs.github.com/${language.toLocaleLowerCase()}/pages`}\n        target=\"_blank\"\n        rel=\"noreferrer\">\n        GitHub Pages\n      </a>\n      {language === 'PT'\n        ? '. Você encontra o código fonte do site '\n        : \" website. You find the website's source code \"}\n      <a\n        href=\"https://github.com/mateusoliveira43/mateusoliveira43.github.io\"\n        target=\"_blank\"\n        rel=\"noreferrer\">\n        {language === 'PT' ? 'aqui' : 'here'}\n      </a>\n      .\n    </p>\n  );\n}\n\nexport default function Home(properties: T.currentLanguage): JSX.Element {\n  return (\n    <React.Fragment>\n      <div className=\"row row-cols-1 row-cols-lg-2 p-1\">\n        <div className=\"col d-flex justify-content-center p-1\">\n          <S.Img\n            src={Logo}\n            alt={\n              properties.language === 'PT'\n                ? 'Logotipo do site: letra M sobrepondo o número 43, passando a mensagem M43, dentro de um círculo verde'\n                : \"Website's logo: letter M overlapping the number 43, passing the message M43, inside a green circle\"\n            }\n          />\n        </div>\n        <div className=\"col p-2\">\n          <h1>{greeting[properties.language]}</h1>\n          <hr />\n          {addVersion(properties.language)}\n          <hr />\n          <h1>{body[properties.language]}</h1>\n          <S.palette>{addColorPalette()}</S.palette>\n          {addWebsiteInfo(properties.language)}\n        </div>\n      </div>\n      <Quote\n        language={properties.language}\n        line={\"If you're good at something, never do it for free.\"}\n        character=\"The Joker\"\n        title=\"THE Dark Knight\"\n        director=\"Christopher Nolan\"\n        company=\"WarnerBros. Pictures\"\n        year={2008}\n      />\n    </React.Fragment>\n  );\n}\n","import '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap';\nimport { createGlobalStyle } from 'styled-components';\n\nimport colors from './colors';\n\nexport default createGlobalStyle`\n  html {\n    height: 100%;\n  }\n\n  body, #root {\n    background: unset;\n    color: unset;\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    min-height: 100%;\n    width: 100%;\n  }\n\n  .light-mode {\n    background: ${colors.primaryBackgroundColor};\n    color: ${colors.primaryTextColor};\n\n    hr {\n      border-top: 2px solid ${colors.primaryColor};\n    }\n\n    div.quote {\n      background-color: ${colors.primaryColor};\n      color: ${colors.secondaryTextColor};\n    }\n  }\n\n  .dark-mode {\n    background: ${colors.darkerGray};\n    color: ${colors.secondaryTextColor};\n\n    hr {\n      border-top: 2px solid ${colors.primaryBackgroundColor};\n      box-shadow: 0 2px 10px 2px ${colors.primaryColor},  0 -2px 10px 2px ${colors.primaryColor};\n    }\n\n    div.quote {\n      border: 2px solid ${colors.primaryBackgroundColor};\n      box-shadow: inset 0 0 15px 2px ${colors.primaryColor}, 0 0 15px 2px ${colors.primaryColor};\n    }\n  }\n\n  a {\n    cursor: pointer;\n  }\n\n  section {\n    a:link,\n    a:visited {\n      color: ${colors.primaryColor};\n      text-decoration: none;\n    }\n\n    a:hover {\n      text-decoration: underline;\n    }\n  }\n\n  /* ************************* Bootstrap override ************************** */\n  .nav-item:hover {\n    color: ${colors.secondaryTextColor};\n  }\n\n  button:focus,\n  .btn-outline-light.focus,\n  .btn-outline-light:focus  {\n    outline: 5px solid ${colors.primaryTextColor};\n  }\n\n  .btn-outline-light:not(:disabled):not(.disabled).active,\n  .btn-outline-light:not(:disabled):not(.disabled):active,\n  .show > .btn-outline-light.dropdown-toggle {\n    color: ${colors.primaryColor};\n  }\n\n  .btn-outline-light.focus,\n  .btn-outline-light:focus,\n  .btn-outline-light:not(:disabled):not(.disabled).active:focus,\n  .btn-outline-light:not(:disabled):not(.disabled):active:focus,\n  .show > .btn-outline-light.dropdown-toggle:focus {\n    box-shadow: none;\n  }\n\n  .navbar-dark .navbar-brand,\n  .navbar-dark .navbar-nav .nav-link:hover {\n    color: ${colors.secondaryTextColor};\n  }\n\n  .navbar-dark .navbar-brand:hover,\n  .navbar-dark .navbar-brand:active {\n    background-color: ${colors.secondaryTextColor};\n    color: ${colors.primaryColor};\n  }\n\n  .navbar-dark .navbar-nav .nav-link {\n    color: ${colors.shadowTextColor};\n  }\n\n  .navbar-dark .navbar-toggler {\n    border-color: ${colors.secondaryTextColor};\n    color: ${colors.secondaryTextColor};\n  }\n\n  .navbar-dark .navbar-toggler-icon {\n    background-image: url(\"data:image/svg+xml;charset=utf8,%3Csvg viewBox='0 0 30 30' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath stroke='rgba(255, 255, 255, 1)' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 7h22M4 15h22M4 23h22'/%3E%3C/svg%3E\");\n  }\n\n  .navbar-brand {\n    margin-right: 0;\n  }\n`;\n","import React, { useEffect, useState } from 'react';\n\nimport * as S from './styles';\nimport Footer from '../components/footer';\nimport Header from '../components/header';\nimport * as E from '../config/enums';\nimport * as T from '../config/types';\nimport About from '../pages/about';\nimport Contact from '../pages/contact';\nimport Home from '../pages/home';\nimport GlobalStyle from '../styles/GlobalStyles';\n\nconst getSection = (\n  language: T.languagesCode,\n): T.sectionsLanguagesComponents => ({\n  home: <Home language={language} />,\n  about: <About language={language} />,\n  contact: <Contact language={language} />,\n});\n\nexport default function App(): JSX.Element {\n  const [activeSection, setActiveSection] = useState<T.sections>('home');\n  const [language, setLanguage] = useState<T.languagesCode>('PT');\n  const [mode, setMode] = useState<T.mode>('dark-mode');\n  const [section, setSection] = useState<JSX.Element>(\n    <Home language={language} />,\n  );\n\n  function changeSection(selectedSection: T.sections): void {\n    document.querySelector('#navbarSupportedContent')?.classList.remove('show');\n    document.querySelector(`#${activeSection}`)?.classList.remove('active');\n    document.querySelector(`#${selectedSection}`)?.classList.add('active');\n    setSection(getSection(language)[selectedSection]);\n    setActiveSection(selectedSection);\n  }\n\n  function changeMode(): void {\n    document.body.classList.remove(`${mode}`);\n    const newMode = mode === 'light-mode' ? 'dark-mode' : 'light-mode';\n    document.body.classList.add(`${newMode}`);\n    setMode(newMode);\n  }\n\n  function changeLanguage(event: React.MouseEvent): void {\n    event.preventDefault();\n\n    setLanguage(event.currentTarget.id as T.languagesCode);\n    document.documentElement.setAttribute(\n      'lang',\n      E.LANGUAGES_HTML_CODES[event.currentTarget.id as T.languagesCode],\n    );\n    document.querySelector(`#${language}`)?.classList.remove('active');\n    document\n      .querySelector(`#${event.currentTarget.id}`)\n      ?.classList.add('active');\n    changeSection(activeSection);\n  }\n\n  useEffect(() => {\n    document.querySelector(`#${activeSection}`)?.classList.add('active');\n    document.querySelector(`#${language}`)?.classList.add('active');\n    document.documentElement.setAttribute(\n      'lang',\n      E.LANGUAGES_HTML_CODES[language],\n    );\n    document.body.classList.add(`${mode}`);\n\n    setSection(getSection(language)[activeSection]);\n  }, [activeSection, language, mode]);\n\n  return (\n    <React.Fragment>\n      <GlobalStyle />\n      <Header\n        changeSection={changeSection}\n        changeMode={changeMode}\n        changeLanguage={changeLanguage}\n        language={language}\n      />\n      <main className=\"my-auto\">\n        <S.Section>{section}</S.Section>\n      </main>\n      <Footer />\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'), // TODO check how to best use this\n);\n"],"sourceRoot":""}